<?xml version="1.0" encoding="utf-8"?>
<btf type="MegaMolGLSLShader" version="1.0" namespace="sphere_flags">
 
<!-- Vertex Shader Snippets -->

    <snippet name="vertex_attributes" type="string">
        <![CDATA[

uniform uint flagsAvailable;
uniform vec4 flagSelectedCol;
uniform vec4 flagSoftSelectedCol;

uniform uint flagOffset;

#ifdef FLAG_STORAGE_SSBO
    layout(std430, binding = 4) buffer flags
    {
        coherent uint inFlags[];
    };
#else
    in uint inFlags;
#endif // FLAG_STORAGE_SSBO 

flat out uint discardFrag;

        ]]>
    </snippet>


    <snippet name="vertex_getflag" type="string">
        <![CDATA[

uint flag = uint(0);

if (bool(flagsAvailable)) {    
#ifdef FLAG_STORAGE_SSBO
    flag = inFlags[(flagOffset + gl_VertexID)];
#else
    flag = flagOffset + inFlags;
#endif // FLAG_STORAGE_SSBO
}

discardFrag = uint(0);
if ((bool(flagsAvailable) && !bitflag_isVisible(flag))) {
    discardFrag = uint(1);
}

        ]]>
    </snippet>


    <snippet name="vertex_attributes_geo" type="string">
        <![CDATA[

out uint currentFlag;
out uint geoDiscardFrag;

        ]]>
    </snippet>


    <snippet name="vertex_getflag_geometry" type="string">
        <![CDATA[

currentFlag = flag;
geoDiscardFrag = discardFrag;

        ]]>
    </snippet>

<!-- Geometry Shader Snippets -->

    <snippet name="geometry_attributes" type="string">
        <![CDATA[

in uint currentFlag[1];
in uint geoDiscardFrag[1];

flat out uint discardFrag;

uniform uint flagsAvailable;
uniform vec4 flagSelectedCol;
uniform vec4 flagSoftSelectedCol;

        ]]>
    </snippet>


    <snippet name="geometry_getflag" type="string">
        <![CDATA[

uint flag = currentFlag[0];
discardFrag = geoDiscardFrag[0];

        ]]>
    </snippet>


<!-- Fragment Shader Snippets -->

    <snippet name="fragment_attributes" type="string">
        <![CDATA[

flat in uint discardFrag;

        ]]>
    </snippet>


    <snippet name="fragment_discardtest" type="string">
        <![CDATA[

if (discardFrag > uint(0)) {   
    discard;
}

        ]]>
    </snippet>        


</btf>

 
